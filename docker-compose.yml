version: '3.3'
services:
  nginx:
    container_name: ${APP_NAME}-nginx
    image: nginx:1.23.3-alpine
    working_dir: /application
    networks:
      - internal
    ports:
      - '${APP_PORT}:80'
    volumes:
      - ./:/application
      - ./docker/nginx:/etc/nginx/conf.d
  php:
    container_name: ${APP_NAME}-php
    build: docker/php
    working_dir: /application
    volumes:
      - ./:/application
      - ./docker/php/php-ini-overrides.ini:/usr/local/etc/php/conf.d/99-overrides.ini
    networks:
      - internal
    depends_on:
    - redis
  database:
    container_name: ${APP_NAME}-database
    build:
      context: docker/database
    ports:
      - '${DB_PORT}:3306'
    networks:
      - internal
    volumes:
      - ./docker/data/database:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
  redis:
    image: redis:latest
    container_name: ${APP_NAME}-redis
    ports:
      - ${REDIS_PORT}:6379
    networks:
      - internal
  adminer:
    image: dockette/adminer:full
    container_name: ${APP_NAME}-adminer
    links:
      - database:database
    ports:
      - '${ADMINER_PORT}:80'
    environment:
      UPLOAD: 1024M
    networks:
      - internal
volumes:
  bd-data:
    driver: local
networks:
  internal:
    driver: bridge
